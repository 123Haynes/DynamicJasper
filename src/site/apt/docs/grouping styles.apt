Grouping Styles
 
 DynamicJasper comes with predefined grouping layots. Different combinations in layouts among nested groups
 can give to your reports a high visual impact. 

1 Group

* Default layout

 <<Code>> {{{../xref-test/ar/com/fdvs/dj/test/groups/GroupsReportTestG1T1.html}GroupsReportTestG1T1}} 

 <<Code Fragment>>
 
+-----------------------------------------------------------------------------+ 
...
drb.setPrintColumnNames(true); // "drb" is the DynamicReportBuilder
...
ColumnsGroup g1 = gb1.setCriteriaColumn((PropertyColumn) columnState)
		.addFooterVariable(columnAmount,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.addFooterVariable(columnaQuantity,ColumnsGroupVariableOperation.SUM,headerVariables)
		.setGroupLayout(GroupLayout.DEFAULT)
		.build();
+-----------------------------------------------------------------------------+ 

 <<Key Points>>

*----------+--------------+--------------+
|| <<Atribute>> || <<Value>> || <<Description>> ||
*----------+--------------+--------------+
| printColumnNames (on "drb") | true | The column names will be shown at the top of each page
*----------+--------------+--------------+
| groupLayout (on group) | DEFAULT | 
*----------+--------------+--------------+
| footerVariable | SUM on column <Quanity> and <Amount>| On each group break, the sum of each column   
*----------+--------------+--------------+
 
  <<Sample snapshot>>
  
[../images/examples/grouping/1g-default.jpg] Default group layout

* Default layout with headers on each group break 

 <<Code>> {{{../xref-test/ar/com/fdvs/dj/test/groups/GroupsReportTestG1T2.html}GroupsReportTestG1T2}}

 <<Code Fragment>>
 
+-----------------------------------------------------------------------------+ 
...
drb.setPrintColumnNames(false); // "drb" is the DynamicReportBuilder
...
ColumnsGroup g1 = gb1.setCriteriaColumn((PropertyColumn) columnState)
		.addFooterVariable(columnAmount,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.addFooterVariable(columnaQuantity,ColumnsGroupVariableOperation.SUM,headerVariables)
		.setGroupLayout(GroupLayout.DEFAULT_WITH_HEADER)
		.build();
+-----------------------------------------------------------------------------+ 

 <<Key Points>>
 
*----------+--------------+--------------+
|| <<Atribute>> || <<Value>> || <<Description>> ||
*----------+--------------+--------------+
| printColumnNames (on "drb") | false | Because each group prints its own header, we dont need this.
*----------+--------------+--------------+
| groupLayout (on group) | DEFAULT_WITH_HEADER | 
*----------+--------------+--------------+

 <<Sample snapshot>>
   
[../images/examples/grouping/1g-DEFAULT_WITH_HEADER.jpg]  Default group layout with headers
 
* Empty layout, grouped column gets hidden

 <<Code>> {{{../xref-test/ar/com/fdvs/dj/test/groups/GroupsReportTestG1T3.html}GroupsReportTestG1T3}}

 <<Code Fragment>>
 
+-----------------------------------------------------------------------------+ 
...
drb.setPrintColumnNames(true); // "drb" is the DynamicReportBuilder
...
ColumnsGroup g1 = gb1.setCriteriaColumn((PropertyColumn) columnState)
		.addFooterVariable(columnAmount,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.addFooterVariable(columnaQuantity,ColumnsGroupVariableOperation.SUM,headerVariables)
		.setGroupLayout(GroupLayout.EMPTY)
		.build();
+-----------------------------------------------------------------------------+ 

 <<Key Points>>
 
*----------+--------------+--------------+
|| <<Atribute>> || <<Value>> || <<Description>> ||
*----------+--------------+--------------+
| printColumnNames (on "drb") | true | The column names will be shown at the top of each page
*----------+--------------+--------------+
| groupLayout (on group) | EMPTY | makes the column used as grouping criteria to be hidden. Note that on each group breaks there are totals for that group 
*----------+--------------+--------------+

 <<Sample snapshot>>
   
[../images/examples/grouping/1g-EMPTY.jpg]  Empty group layout
 
* Simple <Value For Each> layout

 <<Code>> {{{../xref-test/ar/com/fdvs/dj/test/groups/GroupsReportTestG1T4.html}GroupsReportTestG1T4}}

 <<Code Fragment>>
 
+-----------------------------------------------------------------------------+ 
...
drb.setPrintColumnNames(true); // "drb" is the DynamicReportBuilder
...
ColumnsGroup g1 = gb1.setCriteriaColumn((PropertyColumn) columnState)
		.addFooterVariable(columnAmount,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.addFooterVariable(columnaQuantity,ColumnsGroupVariableOperation.SUM,headerVariables)
		.setGroupLayout(GroupLayout.VALUE_FOR_EACH)
		.build();
+-----------------------------------------------------------------------------+ 

 <<Key Points>>
 
*----------+--------------+--------------+
|| <<Atribute>> || <<Value>> || <<Description>> ||
*----------+--------------+--------------+
| printColumnNames (on "drb") | true | The column names will be shown at the top of each page
*----------+--------------+--------------+
| groupLayout (on group) | VALUE_FOR_EACH | The column used as grouping criteria repeats its value on each row. 
*----------+--------------+--------------+

 <<Sample snapshot>>
   
[../images/examples/grouping/1g-VALUE_FOR_EACH.jpg]  Value For Each group layout
 
* Simple <Value For Each With Headers> layout

 <<Code>> {{{../xref-test/ar/com/fdvs/dj/test/groups/GroupsReportTestG1T5.html}GroupsReportTestG1T5}}

 <<Code Fragment>>
 
+-----------------------------------------------------------------------------+ 
...
drb.setPrintColumnNames(false); // "drb" is the DynamicReportBuilder
...
ColumnsGroup g1 = gb1.setCriteriaColumn((PropertyColumn) columnState)
		.addFooterVariable(columnAmount,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.addFooterVariable(columnaQuantity,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.setGroupLayout(GroupLayout.VALUE_FOR_EACH_WITH_HEADERS) // set layout style
		.build();
+-----------------------------------------------------------------------------+
 
 <<Key Points>>
 
*----------+--------------+--------------+
|| <<Atribute>> || <<Value>> || <<Description>> ||
*----------+--------------+--------------+
| printColumnNames (on "drb") | false | Because every group break will add its own headers
*----------+--------------+--------------+
| groupLayout (on group) | VALUE_FOR_EACH_WITH_HEADERS | The column used as grouping criteria repeats its value on each row. Headers are printed on every group break. 
*----------+--------------+--------------+
 
  <<Sample snapshot>>
  
[../images/examples/grouping/1g-VALUE_FOR_EACH_WITH_HEADERS.jpg]  Value For Each With Headers group layout
 
* <Value In Header> layout

 <<Code>> {{{../xref-test/ar/com/fdvs/dj/test/groups/GroupsReportTestG1T6.html}GroupsReportTestG1T6}}

 <<Code Fragment>>
 
+-----------------------------------------------------------------------------+ 
...
drb.setPrintColumnNames(true); // "drb" is the DynamicReportBuilder
...
columnState.setStyle(titleStyle); //Give a special style to the grouping column (bigger font)
...
ColumnsGroup g1 = gb1.setCriteriaColumn((PropertyColumn) columnState)
		.addFooterVariable(columnAmount,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.addFooterVariable(columnaQuantity,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.setGroupLayout(GroupLayout.VALUE_IN_HEADER) // set layout style
		.build();
+-----------------------------------------------------------------------------+
 
 <<Key Points>>
 
*----------+--------------+--------------+
|| <<Atribute>> || <<Value>> || <<Description>> ||
*----------+--------------+--------------+
| printColumnNames (on "drb") | true | Just once on each page.
*----------+--------------+--------------+
| groupLayout (on group) | VALUE_IN_HEADER | The grouping column gets hidden but on each group break the grouping column current value is printed in a separated line.  
*----------+--------------+--------------+
| style (of the grouping column) | <A different style from the rest of the columns> |   
*----------+--------------+--------------+
 
  <<Sample snapshot>>
  
[../images/examples/grouping/1g-VALUE_IN_HEADER.jpg]  Value In Header group layout
 
* <Value In Header With Headers> layout

 <<Code>> {{{../xref-test/ar/com/fdvs/dj/test/groups/GroupsReportTestG1T7.html}GroupsReportTestG1T7}}

 <<Code Fragment>>
 
+-----------------------------------------------------------------------------+ 
...
drb.setPrintColumnNames(false); // "drb" is the DynamicReportBuilder
...
columnState.setStyle(titleStyle); //Give a special style to the grouping column (bigger font)
...
ColumnsGroup g1 = gb1.setCriteriaColumn((PropertyColumn) columnState)
		.addFooterVariable(columnAmount,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.addFooterVariable(columnaQuantity,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.setGroupLayout(GroupLayout.VALUE_IN_HEADER_WITH_HEADERS) // set layout style
		.build();
+-----------------------------------------------------------------------------+
 
 <<Key Points>>
 
*----------+--------------+--------------+
|| <<Atribute>> || <<Value>> || <<Description>> ||
*----------+--------------+--------------+
| printColumnNames (on "drb") | false | Because every group break will add its own headers
*----------+--------------+--------------+
| groupLayout (on group) | VALUE_IN_HEADER_WITH_HEADERS | The grouping column gets hidden but on each group break the grouping column current value is printed right before the headers.  
*----------+--------------+--------------+
| style (of the grouping column) | <A different style from the rest of the columns> |   
*----------+--------------+--------------+
 
  <<Sample snapshot>>
  
[../images/examples/grouping/1g-VALUE_IN_HEADER_WITH_HEADERS.jpg]  Value In Header group layout

* <Value In Header With Headers And Column Name> layout

 <<Code>> {{{../xref-test/ar/com/fdvs/dj/test/groups/GroupsReportTestG1T8.html}GroupsReportTestG1T8}}

 <<Code Fragment>>
 
+-----------------------------------------------------------------------------+ 
...
drb.setPrintColumnNames(false); // "drb" is the DynamicReportBuilder
...
columnState.setStyle(titleStyle); //Give a special style to the grouping column detail (bigger font)
columnState.setHeaderStyle(titleStyle); //Give a special style to the grouping column tile (bigger font)
columnState.setWidth(new Integer(85)); 
...
ColumnsGroup g1 = gb1.setCriteriaColumn((PropertyColumn) columnState)
		.addFooterVariable(columnAmount,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.addFooterVariable(columnaQuantity,ColumnsGroupVariableOperation.SUM,headerVariables) 
		.setGroupLayout(GroupLayout.VALUE_IN_HEADER_WITH_HEADERS_AND_COLUMN_NAME) // set layout style
		.build();
+-----------------------------------------------------------------------------+
 
 <<Key Points>>
 
*----------+--------------+--------------+
|| <<Atribute>> || <<Value>> || <<Description>> ||
*----------+--------------+--------------+
| printColumnNames (on "drb") | false | Because every group break will add its own headers
*----------+--------------+--------------+
| groupLayout (on group) | VALUE_IN_HEADER_WITH_HEADERS_AND_COLUMN_NAME | The grouping column gets hidden but on each group break the grouping column current value is printed right before the headers.  
*----------+--------------+--------------+
| style (of the grouping column) | <A different style from the rest of the columns> |   
*----------+--------------+--------------+
| heaedrStyle (of the grouping column) | <A different header style from the rest of the columns> |   
*----------+--------------+--------------+
| width (of the grouping column) | 50 | This layout uses the column width attribute to set the title with, the value gets the rest of space left.   
*----------+--------------+--------------+
 
  <<Sample snapshot>>
  
[../images/examples/grouping/1g-VALUE_IN_HEADER_WITH_HEADERS_AND_COLUMN_NAME.jpg]  Value In Header group layout
 